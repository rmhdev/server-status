# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app_name: 'aktibo'
    app_repository: 'https://github.com/rmhdev/server-status'
    author_name: 'Rober MH'
    author_username: 'rmhdev'
    author_webpage: 'http://rmhdev.net'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/App/*'
        exclude: '../src/App/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/App/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags: ['twig.extension']

    # repositories:
    ServerStatus\Domain\Model\Check\CheckRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            $entityName: 'ServerStatus\Domain\Model\Check\Check'
    ServerStatus\Domain\Model\Measurement\MeasurementRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            $entityName: 'ServerStatus\Domain\Model\Measurement\Measurement'
    ServerStatus\Domain\Model\Customer\CustomerRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            $entityName: 'ServerStatus\Domain\Model\Customer\Customer'
    ServerStatus\Domain\Model\Alert\AlertRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            $entityName: 'ServerStatus\Domain\Model\Alert\Alert'
    ServerStatus\Domain\Model\AlertNotification\AlertNotificationRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            $entityName: 'ServerStatus\Domain\Model\AlertNotification\AlertNotification'

    Http\Client\HttpClient:
        factory: ['Http\Discovery\HttpClientDiscovery', find]
    Http\Message\MessageFactory:
        factory: ['Http\Discovery\MessageFactoryDiscovery', find]
    ServerStatus\Infrastructure\Service\Ping\PingService:
        class: ServerStatus\Infrastructure\Service\Ping\HttpPingService

    # data transformers
    ServerStatus\Application\DataTransformer\Measurement\MeasurementSummaryDataTransformer:
        class: ServerStatus\Application\DataTransformer\Measurement\MeasurementSummaryDtoDataTransformer
    ServerStatus\Application\DataTransformer\Measurement\PerformanceReportsByCustomerDataTransformer:
        class: ServerStatus\Application\DataTransformer\Measurement\PerformanceReportsByCustomerDtoDataTransformer
    ServerStatus\Application\DataTransformer\Customer\CustomerChecksDataTransformer:
        class: ServerStatus\Application\DataTransformer\Customer\CustomerChecksDtoDataTransformer
    ServerStatus\Application\DataTransformer\Check\CheckDataTransformer:
        class: ServerStatus\Application\DataTransformer\Check\CheckDtoDataTransformer
    ServerStatus\Application\DataTransformer\Alert\CustomerAlertsDataTransformer:
        class: ServerStatus\Application\DataTransformer\Alert\CustomerAlertsDtoDataTransformer

    # application services
    ServerStatus\Application\Service\Check\ViewCheckByCustomerService:
        public: true
    ServerStatus\Application\Service\Check\ViewPerformanceReportsService:
        public: true
    ServerStatus\Application\Service\Alert\ViewAlertsByCustomerService:
        public: false

    # console commands:
    ServerStatus\Infrastructure\Ui\Console\Command\PingCommand:
        public: false
    ServerStatus\Infrastructure\Ui\Console\Command\CustomerChecksCommand:
        public: false
    ServerStatus\Infrastructure\Ui\Console\Command\CustomerCheckCommand:
        public: false
    ServerStatus\Infrastructure\Ui\Console\Command\CustomerAlertsCommand:
        public: false
